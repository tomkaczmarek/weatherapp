#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherDatabase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WeatherDatabase")]
	public partial class WeatherDataMapDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWEATHER_DATA(WEATHER_DATA instance);
    partial void UpdateWEATHER_DATA(WEATHER_DATA instance);
    partial void DeleteWEATHER_DATA(WEATHER_DATA instance);
    #endregion
		
		public WeatherDataMapDataContext() : 
				base(global::WeatherDatabase.Properties.Settings.Default.WeatherDatabaseConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public WeatherDataMapDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeatherDataMapDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeatherDataMapDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeatherDataMapDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WEATHER_DATA> WEATHER_DATAs
		{
			get
			{
				return this.GetTable<WEATHER_DATA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WEATHER_DATA")]
	public partial class WEATHER_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CITY_NAME;
		
		private System.Nullable<System.DateTime> _SUNRISE;
		
		private System.Nullable<System.DateTime> _SUNSET;
		
		private System.Nullable<System.DateTime> _UPDATE_DATE;
		
		private System.Nullable<bool> _IS_RAIN;
		
		private System.Nullable<bool> _IS_CLOUD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCITY_NAMEChanging(string value);
    partial void OnCITY_NAMEChanged();
    partial void OnSUNRISEChanging(System.Nullable<System.DateTime> value);
    partial void OnSUNRISEChanged();
    partial void OnSUNSETChanging(System.Nullable<System.DateTime> value);
    partial void OnSUNSETChanged();
    partial void OnUPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATE_DATEChanged();
    partial void OnIS_RAINChanging(System.Nullable<bool> value);
    partial void OnIS_RAINChanged();
    partial void OnIS_CLOUDChanging(System.Nullable<bool> value);
    partial void OnIS_CLOUDChanged();
    #endregion
		
		public WEATHER_DATA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_NAME", DbType="NVarChar(50)")]
		public string CITY_NAME
		{
			get
			{
				return this._CITY_NAME;
			}
			set
			{
				if ((this._CITY_NAME != value))
				{
					this.OnCITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_NAME = value;
					this.SendPropertyChanged("CITY_NAME");
					this.OnCITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUNRISE", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUNRISE
		{
			get
			{
				return this._SUNRISE;
			}
			set
			{
				if ((this._SUNRISE != value))
				{
					this.OnSUNRISEChanging(value);
					this.SendPropertyChanging();
					this._SUNRISE = value;
					this.SendPropertyChanged("SUNRISE");
					this.OnSUNRISEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUNSET", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUNSET
		{
			get
			{
				return this._SUNSET;
			}
			set
			{
				if ((this._SUNSET != value))
				{
					this.OnSUNSETChanging(value);
					this.SendPropertyChanging();
					this._SUNSET = value;
					this.SendPropertyChanged("SUNSET");
					this.OnSUNSETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATE_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATE_DATE
		{
			get
			{
				return this._UPDATE_DATE;
			}
			set
			{
				if ((this._UPDATE_DATE != value))
				{
					this.OnUPDATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATE_DATE = value;
					this.SendPropertyChanged("UPDATE_DATE");
					this.OnUPDATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_RAIN", DbType="Bit")]
		public System.Nullable<bool> IS_RAIN
		{
			get
			{
				return this._IS_RAIN;
			}
			set
			{
				if ((this._IS_RAIN != value))
				{
					this.OnIS_RAINChanging(value);
					this.SendPropertyChanging();
					this._IS_RAIN = value;
					this.SendPropertyChanged("IS_RAIN");
					this.OnIS_RAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_CLOUD", DbType="Bit")]
		public System.Nullable<bool> IS_CLOUD
		{
			get
			{
				return this._IS_CLOUD;
			}
			set
			{
				if ((this._IS_CLOUD != value))
				{
					this.OnIS_CLOUDChanging(value);
					this.SendPropertyChanging();
					this._IS_CLOUD = value;
					this.SendPropertyChanged("IS_CLOUD");
					this.OnIS_CLOUDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
